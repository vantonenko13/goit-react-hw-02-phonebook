{"version":3,"sources":["contact-form/ContactForm.jsx","contact-filter/Filter.jsx","contact-list/Contact.jsx","contact-list/ContactList.jsx","App.js","index.js","contact-list/ContactList.module.css"],"names":["ContactForm","submitHandler","contact","state","id","nanoid","found","props","contacts","find","item","name","toLowerCase","alert","number","setState","onCreateHandler","onSubmit","e","preventDefault","value","this","onChange","target","type","pattern","title","required","onClick","Component","Filter","onChangeHandler","Contact","idx","deleteHandler","className","styles","ContactList","contactList","length","map","i","key","App","filteredContacts","filter","includes","contactCreationHandler","filterChangeHandler","deleteContactHandler","newArray","localStorage","getItem","parseContacts","JSON","parse","prevProps","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.13a33339.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { nanoid } from \"nanoid\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      number: \"\",\r\n    };\r\n  }\r\n\r\n  submitHandler = () => {\r\n    const contact = { ...this.state };\r\n    contact.id = nanoid();\r\n\r\n    //\r\n    const found = this.props.contacts.find(\r\n      (item) => item.name.toLowerCase() === contact.name.toLowerCase()\r\n    );\r\n    if (found) {\r\n      return alert(`${found.name} is already in contacts.`);\r\n    }\r\n    if (this.state.name && this.state.number) {\r\n      this.setState({ name: \"\", number: \"\" });\r\n      this.props.onCreateHandler(contact);\r\n    } else {\r\n      return alert(\"Enter name and number!\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"contact-creation-form\" onSubmit={(e) => e.preventDefault()}>\r\n        <label>\r\n          Name\r\n          <input\r\n            value={this.state.name}\r\n            onChange={(e) => this.setState((state) => ({ ...state, name: e.target.value }))}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            value={this.state.number}\r\n            onChange={(e) => this.setState((state) => ({ ...state, number: e.target.value }))}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button onClick={this.submitHandler}>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = { onCreateHandler: PropTypes.func.isRequired };\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChangeHandler }) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Find contacts by name\r\n        <input type=\"text\" name=\"filter\" value={value} onChange={onChangeHandler} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = { value: PropTypes.string, onChangeHandler: PropTypes.func.isRequired };\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst Contact = ({ id, idx, name, number, deleteHandler }) => {\r\n  return (\r\n    <li className={styles.contact}>\r\n      {idx + 1}. {name}: {number}\r\n      <button onClick={() => deleteHandler(id)}>Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string,\r\n  idx: PropTypes.number,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  deleteHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Contact from \"./Contact\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, deleteHandler }) => {\r\n  return (\r\n    <div>\r\n      <ul className={styles.contactList}>\r\n        {contacts && contacts.length ? (\r\n          contacts.map((contact, i) => {\r\n            const { id, name, number } = contact;\r\n\r\n            return (\r\n              <Contact\r\n                key={id}\r\n                id={id}\r\n                idx={i}\r\n                name={name}\r\n                number={number}\r\n                deleteHandler={deleteHandler}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <p>Contacts not found!</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\n\nimport ContactForm from \"./contact-form/ContactForm\";\nimport Filter from \"./contact-filter/Filter\";\nimport ContactList from \"./contact-list/ContactList\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      contacts: [],\n      filter: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parseContacts = contacts ? JSON.parse(contacts) : null;\n\n    if (parseContacts) {\n      this.setState((state) => ({ ...state, contacts: [...parseContacts] }));\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  filteredContacts = () => {\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n  };\n\n  contactCreationHandler = (contact) => {\n    this.setState((state) => ({ ...state, contacts: [...state.contacts, contact] }));\n  };\n\n  filterChangeHandler = (e) => {\n    this.setState((state) => ({ ...state, filter: e.target.value }));\n  };\n\n  deleteContactHandler = (id) => {\n    const newArray = this.state.contacts.filter((contact) => contact.id !== id);\n    this.setState((state) => ({ ...state, contacts: [...newArray] }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onCreateHandler={this.contactCreationHandler} contacts={this.state.contacts} />\n\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChangeHandler={this.filterChangeHandler} />\n        <ContactList contacts={this.filteredContacts()} deleteHandler={this.deleteContactHandler} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__38ynH\",\"contact\":\"ContactList_contact__2GZ3v\"};"],"sourceRoot":""}