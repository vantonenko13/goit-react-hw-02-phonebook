{"version":3,"sources":["contact-form/ContactForm.jsx","contact-filter/Filter.jsx","contact-list/Contact.jsx","contact-list/ContactList.jsx","App.js","index.js","contact-list/ContactList.module.css"],"names":["ContactForm","submitHandler","contact","state","id","nanoid","props","onCreateHandler","name","number","onSubmit","e","preventDefault","value","this","onChange","setState","target","type","pattern","title","required","onClick","Component","Filter","onChangeHandler","Contact","idx","deleteHandler","className","styles","ContactList","contacts","contactList","length","map","i","key","App","useState","filter","filteredContacts","useMemo","toLowerCase","includes","found","find","item","alert","newArray","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4d0334a4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { nanoid } from \"nanoid\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      number: \"\",\r\n    };\r\n  }\r\n\r\n  submitHandler = () => {\r\n    const contact = { ...this.state };\r\n    contact.id = nanoid();\r\n\r\n    this.props.onCreateHandler(contact);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"contact-creation-form\" onSubmit={(e) => e.preventDefault()}>\r\n        <label>\r\n          Name\r\n          <input\r\n            value={this.state.name}\r\n            onChange={(e) => this.setState((state) => ({ ...state, name: e.target.value }))}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            value={this.state.number}\r\n            onChange={(e) => this.setState((state) => ({ ...state, number: e.target.value }))}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button onClick={this.submitHandler}>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = { onCreateHandler: PropTypes.func.isRequired };\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChangeHandler }) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Find contacts by name\r\n        <input type=\"text\" name=\"filter\" value={value} onChange={onChangeHandler} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = { value: PropTypes.string, onChangeHandler: PropTypes.func.isRequired };\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst Contact = ({ id, idx, name, number, deleteHandler }) => {\r\n  return (\r\n    <li className={styles.contact}>\r\n      {idx + 1}. {name}: {number}\r\n      <button onClick={() => deleteHandler(id)}>Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string,\r\n  idx: PropTypes.number,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  deleteHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Contact from \"./Contact\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, deleteHandler }) => {\r\n  return (\r\n    <div>\r\n      <ul className={styles.contactList}>\r\n        {contacts && contacts.length ? (\r\n          contacts.map((contact, i) => {\r\n            const { id, name, number } = contact;\r\n\r\n            return (\r\n              <Contact\r\n                key={id}\r\n                id={id}\r\n                idx={i}\r\n                name={name}\r\n                number={number}\r\n                deleteHandler={deleteHandler}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <p>Contacts not found!</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { useState, useMemo } from \"react\";\n\nimport ContactForm from \"./contact-form/ContactForm\";\nimport Filter from \"./contact-filter/Filter\";\nimport ContactList from \"./contact-list/ContactList\";\n\nfunction App() {\n  const [state, setState] = useState({\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  });\n\n  const filteredContacts = useMemo(() => {\n    return state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(state.filter.toLowerCase())\n    );\n  }, [state]);\n\n  const contactCreationHandler = (contact) => {\n    const found = state.contacts.find(\n      (item) => item.name.toLowerCase() === contact.name.toLowerCase()\n    );\n    if (found) {\n      return alert(`${found.name} is already in contacts.`);\n    }\n    setState({ ...state, contacts: [...state.contacts, contact] });\n  };\n\n  const filterChangeHandler = (e) => {\n    setState({ ...state, filter: e.target.value });\n  };\n\n  const deleteContactHandler = (id) => {\n    const newArray = state.contacts.filter((contact) => contact.id !== id);\n    setState({ ...state, contacts: [...newArray] });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onCreateHandler={contactCreationHandler} />\n\n      <h2>Contacts</h2>\n      <Filter value={state.filter} onChangeHandler={filterChangeHandler} />\n      <ContactList contacts={filteredContacts} deleteHandler={deleteContactHandler} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1bJYS\",\"contact\":\"ContactList_contact__6zagR\"};"],"sourceRoot":""}