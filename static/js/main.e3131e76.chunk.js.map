{"version":3,"sources":["contact-form/ContactForm.jsx","contact-filter/Filter.jsx","contact-list/Contact.jsx","contact-list/ContactList.jsx","App.js","index.js","contact-list/ContactList.module.css"],"names":["ContactForm","onCreateHandler","id","onSubmit","e","preventDefault","form","currentTarget","contact","name","elements","value","number","nanoid","reset","type","pattern","title","required","Filter","onChangeHandler","onChange","Contact","idx","deleteHandler","className","styles","onClick","ContactList","contacts","contactList","length","map","i","key","App","useState","filter","state","setState","filteredContacts","useMemo","toLowerCase","includes","found","find","item","alert","target","newArray","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e3131e76.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { nanoid } from \"nanoid\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactForm = ({ onCreateHandler }) => {\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const name = form.elements.name.value;\r\n    const number = form.elements.number.value;\r\n\r\n    const contact = { name, number };\r\n    contact.id = nanoid();\r\n\r\n    onCreateHandler(contact);\r\n\r\n    form.reset();\r\n  };\r\n\r\n  return (\r\n    <form id=\"contact-creation-form\" onSubmit={submitHandler}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = { onCreateHandler: PropTypes.func.isRequired };\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChangeHandler }) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Find contacts by name\r\n        <input type=\"text\" name=\"filter\" value={value} onChange={onChangeHandler} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = { value: PropTypes.string, onChangeHandler: PropTypes.func.isRequired };\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst Contact = ({ id, idx, name, number, deleteHandler }) => {\r\n  return (\r\n    <li className={styles.contact}>\r\n      {idx + 1}. {name}: {number}\r\n      <button onClick={() => deleteHandler(id)}>Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string,\r\n  idx: PropTypes.number,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  deleteHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Contact from \"./Contact\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, deleteHandler }) => {\r\n  return (\r\n    <div>\r\n      <ul className={styles.contactList}>\r\n        {contacts && contacts.length ? (\r\n          contacts.map((contact, i) => {\r\n            const { id, name, number } = contact;\r\n\r\n            return (\r\n              <Contact\r\n                key={id}\r\n                id={id}\r\n                idx={i}\r\n                name={name}\r\n                number={number}\r\n                deleteHandler={deleteHandler}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <p>Contacts not found!</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { useState, useMemo } from \"react\";\n\nimport ContactForm from \"./contact-form/ContactForm\";\nimport Filter from \"./contact-filter/Filter\";\nimport ContactList from \"./contact-list/ContactList\";\n\nfunction App() {\n  const [state, setState] = useState({\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  });\n\n  const filteredContacts = useMemo(() => {\n    return state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(state.filter.toLowerCase())\n    );\n  }, [state]);\n\n  const contactCreationHandler = (contact) => {\n    const found = state.contacts.find(\n      (item) => item.name.toLowerCase() === contact.name.toLowerCase()\n    );\n    if (found) {\n      return alert(`${found.name} is already in contacts.`);\n    }\n    setState({ ...state, contacts: [...state.contacts, contact] });\n  };\n\n  const filterChangeHandler = (e) => {\n    setState({ ...state, filter: e.target.value });\n  };\n\n  const deleteContactHandler = (id) => {\n    const newArray = state.contacts.filter((contact) => contact.id !== id);\n    setState({ ...state, contacts: [...newArray] });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onCreateHandler={contactCreationHandler} />\n\n      <h2>Contacts</h2>\n      <Filter value={state.filter} onChangeHandler={filterChangeHandler} />\n      <ContactList contacts={filteredContacts} deleteHandler={deleteContactHandler} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1bJYS\",\"contact\":\"ContactList_contact__6zagR\"};"],"sourceRoot":""}